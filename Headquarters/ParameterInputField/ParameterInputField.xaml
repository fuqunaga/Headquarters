<UserControl x:Class="Headquarters.ParameterInputField"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignInternal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf"
             xmlns:local="clr-namespace:Headquarters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:ParameterInputFieldViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>

        <Style x:Key="FolderOpenIconButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
            <Setter Property="Foreground" Value="{Binding ElementName=PART_TextBox, Path=Foreground}" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Visibility" Value="{Binding ShowOpenFileButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        
        <!-- ScriptParameterInputFieldType別コンテンツ -->
        <DataTemplate x:Key="Field-UseIpList" DataType="{x:Type local:ParameterInputFieldViewModel}">
            <Grid>
                <TextBox IsEnabled="False"
                         Text="IP Listの値を参照します"
                         VerticalAlignment="Center"
                         Padding="0"
                         />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Field-TextBox" DataType="{x:Type local:ParameterInputFieldViewModel}">
            <Grid>
                <TextBox x:Name="PART_TextBox"
                         VerticalAlignment="Center"
                         IsTabStop="True"
                         materialDesignInternal:InternalTextFieldAssist.IsMouseOver="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                            <Setter Property="Text" Value="{Binding Value}" />
                            <Setter Property="Padding" Value="0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowOpenFileButton}" Value="True">
                                    <Setter Property="Padding" Value="0 0 32 0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                    </TextBox.Style>
                </TextBox>

                <Button Command="{Binding OpenFileCommand}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Focusable="False"
                        Width="24"
                        Height="24"
                        Style="{StaticResource FolderOpenIconButtonStyle}">
                    <materialDesign:PackIcon Kind="FolderOpen" Width="16" Height="16"/>
                </Button>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="Field-ComboBox" DataType="{x:Type local:ParameterInputFieldViewModel}">
            <ComboBox  ItemsSource="{Binding ComboBoxItems}"
                       SelectedValue="{Binding Value}"
                       VerticalAlignment="Center"
                       materialDesign:TextFieldAssist.OutlinedBorderActiveThickness="0"
                       Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                       Padding="0"
                       IsTabStop="True" />
        </DataTemplate>

        <DataTemplate x:Key="Field-ToggleButton" DataType="{x:Type local:ParameterInputFieldViewModel}">
            <StackPanel Orientation="Horizontal">
                <ToggleButton IsChecked="{Binding Value}"
                              HorizontalAlignment="Left" />
                <TextBlock
                    Text="{Binding (materialDesign:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                    VerticalAlignment="Center"
                    Margin="16 0"
                    Opacity="0.5" />
            </StackPanel>
        </DataTemplate>

        <!-- ScriptParameterInputFieldType別コンテンツ出し分け -->
        <Style x:Key="InputField" TargetType="ContentControl">
            <Setter Property="materialDesign:HintAssist.Hint" Value="{Binding Name}" />
            <Setter Property="ContentTemplate" Value="{StaticResource Field-UseIpList}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasHelp}" Value="False">
                    <Setter Property="materialDesign:HintAssist.Hint" Value="" />
                </DataTrigger>

                <DataTrigger Binding="{Binding FieldType}"
                             Value="{x:Static local:ParameterInputFieldType.TextBox}">
                    <Setter Property="ContentTemplate" Value="{StaticResource Field-TextBox}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding FieldType}"
                             Value="{x:Static local:ParameterInputFieldType.ComboBox}">
                    <Setter Property="ContentTemplate" Value="{StaticResource Field-ComboBox}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding FieldType}"
                             Value="{x:Static local:ParameterInputFieldType.ToggleButton}">
                    <Setter Property="ContentTemplate" Value="{StaticResource Field-ToggleButton}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>
    
    
    
    <Grid Margin="32 12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition SharedSizeGroup="FirstRow" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Help -->
        <local:HelpTextBlock Grid.Column="0" />
                             
        <!-- Input Field -->
        <Border Grid.Column="1"
                Style="{StaticResource LockableStyle}">
            
            <Grid>
                <ContentControl Style="{StaticResource InputField}" Content="{Binding }"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>
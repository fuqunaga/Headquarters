<Window x:Class="Headquarters.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Headquarters"
        mc:Ignorable="d"
        Title="Headquaters" MinHeight="600"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" Width="1000.131"
        >
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        </Style>

        <PasswordBox
            x:Key="TopPasswordBox"
            PasswordChanged="OnTopPasswordChanged"
            materialDesign:HintAssist.Hint="Password"
            Width="200"
            >
            <!-- For stange font color,size when delete "UserPassword" column at IPList -->
            <PasswordBox.Style>
                <Style TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}" >
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                    <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
                </Style>
            </PasswordBox.Style>
        </PasswordBox>


        <DataTemplate x:Key="PasswordBoxTemplate">
            <TextBlock>
                <materialDesign:PackIcon
                    Kind="Key" Foreground="{Binding Content.BorderBrush, ElementName=TopPasswordBox}"/>
                <ContentControl Content="{StaticResource TopPasswordBox}" Name="TopPasswordBox" IsTabStop="False"/>
            </TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="PasswordTextBoxTemplate">
            <TextBlock>
                <materialDesign:PackIcon Grid.Column="0"
                    Kind="Key" Foreground="{Binding BorderBrush, ElementName=TopPasswordBox}"/>
                <TextBox Grid.Column="1"
                    Name="TopPasswordBox"
                    Text="{Binding Value}"
                    IsEnabled="{Binding IsIndependentIP}"
                    materialDesign:HintAssist.Hint="Password"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Width="200"/>
            </TextBlock>
        </DataTemplate>

        <local:BoolDataTemplateSelector x:Key="passwordBoxTemplateSelector"
                                        BoolPropertyName="IsIndependentIP"
                                        TrueTemplate="{StaticResource PasswordBoxTemplate}"
                                        FalseTemplate="{StaticResource PasswordTextBoxTemplate}"/>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog">
        <DockPanel>
            <materialDesign:ColorZone Mode="PrimaryDark" Padding="16" DockPanel.Dock="Top" materialDesign:ShadowAssist.ShadowDepth="Depth2" Panel.ZIndex="100">
                <Grid Margin="16,0,0,0">
                    <TextBlock Style="{StaticResource MaterialDesignDisplay1TextBlock}">
                       <Hyperlink
                           NavigateUri="https://github.com/fuqunaga/Headquaters"
                           RequestNavigate="Hyperlink_RequestNavigate"
                           >
                           <Hyperlink.Style>
                               <Style TargetType="Hyperlink">
                                   <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource FindAncestor,AncestorType=TextBlock}}"/>
                                   <Setter Property="TextDecorations" Value=""/>
                               </Style>
                           </Hyperlink.Style>                       
                           HQ</Hyperlink>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Right">
                        <materialDesign:PackIcon Kind="Account" Foreground="{Binding ElementName=tbUserName, Path=BorderBrush}" />
                        <TextBox x:Name="tbUserName"
                                 Text="{Binding Value}"
                                 IsEnabled="{Binding IsIndependentIP}"
                                 materialDesign:HintAssist.Hint="Name" Width="200"  
                                 >
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                    <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                
                        <ContentControl 
                            Name="UserPassword" Margin="16,0,0,0"
                            IsTabStop="False"
                            Content="{Binding}"
                            ContentTemplateSelector="{StaticResource passwordBoxTemplateSelector}"
                            />
                    </TextBlock>

                </Grid>
            </materialDesign:ColorZone>

            <Grid DockPanel.Dock="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- IPList -->
                <DockPanel Grid.Column="0" Margin="0">
                    <materialDesign:ColorZone Mode="PrimaryMid" Padding="16" DockPanel.Dock="Top" materialDesign:ShadowAssist.ShadowDepth="Depth2" Panel.ZIndex="1">
                        <DockPanel>
                            <materialDesign:PackIcon Kind="IpNetwork" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" Margin="8,0,0,0">IP List</TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>

                    <DataGrid x:Name="dgIPList" 
                              ItemsSource="{Binding Items, Mode=TwoWay}" 
                              Margin="0" 
                              VerticalScrollBarVisibility="Auto"
                              DockPanel.Dock="Bottom"
                              >

                        <DataGrid.Resources>
                            <DataTemplate x:Key="SelectAll">
                                <CheckBox IsChecked="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                            </DataTemplate>
                            <DataTemplate x:Key="IsSelected">
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>

                            <ContextMenu x:Key="HeaderContextMenu">
                                <MenuItem Header="Add" Click="OnClickAddColumn" />
                                <MenuItem Header="Rename" Click="OnClickRenameColumn" IsEnabled="{Binding DataContext.IsColumnEditable,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}" />
                                <MenuItem Header="Delete" Click="OnClickDeleteColumn" IsEnabled="{Binding DataContext.IsColumnEditable,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}" />
                            </ContextMenu>

                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="ContextMenu" Value="{StaticResource HeaderContextMenu}" />
                                <!-- https://stackoverflow.com/questions/24928463/connect-handler-to-contextmenu-in-style-section -->
                                <EventSetter Event="ContextMenuOpening" Handler="OnHeaderContextMenuOpen" />
                            </Style>
                        </DataGrid.Resources>
                    </DataGrid>
                </DockPanel>


                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

                <materialDesign:Transitioner Name="tsScripts" SelectedIndex="0"  Panel.ZIndex="-10" Grid.Column="2">
                    <materialDesign:TransitionerSlide OpeningEffect="SlideInFromLeft">
                        <materialDesign:TransitionerSlide.ForwardWipe>
                            <materialDesign:FadeWipe />
                        </materialDesign:TransitionerSlide.ForwardWipe>

                        <!-- Select script -->
                        <DockPanel >
                            <materialDesign:ColorZone Mode="PrimaryMid" Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" DockPanel.Dock="Top">
                                <DockPanel>
                                    <materialDesign:PackIcon Kind="ScriptText"/>
                                    <TextBlock VerticalAlignment="Center" Margin="8,0,0,0">Scripts</TextBlock>
                                </DockPanel>
                            </materialDesign:ColorZone>

                            <ScrollViewer DockPanel.Dock="Top"
                                Margin="8,8,8,8"
                                VerticalScrollBarVisibility="Disabled"
                                HorizontalScrollBarVisibility="Auto">

                                <ItemsControl Name="ScriptButtons" ItemsSource="{Binding Items}">

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Vertical"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button
                                                Margin="8"
                                        Style="{StaticResource MaterialDesignRaisedLightButton}"
                                        Click="OnClickSelectScript" Content="{Binding Header}" HorizontalAlignment="Left"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </DockPanel>
                    </materialDesign:TransitionerSlide>

                    <materialDesign:TransitionerSlide OpeningEffect="SlideInFromRight" DataContext="{Binding Current}">
                        <materialDesign:TransitionerSlide.BackwardWipe>
                            <materialDesign:FadeWipe />
                        </materialDesign:TransitionerSlide.BackwardWipe>
                        <DockPanel>
                            <materialDesign:ColorZone Mode="PrimaryMid" Padding="8,0,0,0" DockPanel.Dock="Top" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                                <DockPanel>
                                    <!-- Return Button -->
                                    <Button 
                                        materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                        Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}"
                                        HorizontalAlignment="Left">
                                        <materialDesign:PackIcon Kind="ArrowLeft" />
                                    </Button>

                                    <materialDesign:PackIcon Kind="ScriptText" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                    <Label Content="{Binding Header}" VerticalAlignment="Center" />

                                    <!-- Run Button -->
                                    <materialDesign:Transitioner Name="RunButtonSelector" SelectedIndex="1" Margin="16,0,8,0">
                                        <Button 
                                            Style="{StaticResource MaterialDesignRaisedAccentButton}"
                                            HorizontalAlignment="Left"
                                            IsEnabled="False"
                                            Content="Select IP" />

                                        <materialDesign:TransitionerSlide>
                                            <materialDesign:TransitionerSlide.BackwardWipe>
                                                <materialDesign:FadeWipe />
                                            </materialDesign:TransitionerSlide.BackwardWipe>

                                            <DockPanel>
                                                <Button 
                                                    Margin="8"
                                                    Name="RunButton"
                                                    Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                                                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                                                    Click="OnClickRun"
                                                    >
                                                    <materialDesign:PackIcon Kind="MenuRight" Height="32" Width="32" />
                                                </Button>

                                                <DockPanel HorizontalAlignment="Right">
                                                    <Label VerticalAlignment="Center" Margin="4" Content="MaxTaskNum" ToolTipService.ShowDuration="10000">
                                                        <Label.ToolTip>
                                                            <TextBlock>
                                                                Limit the number of concurrent tasks.<LineBreak />
                                                                If you are getting OutOfMemory exceptions, try a smaller number than IP List.
                                                            </TextBlock>
                                                        </Label.ToolTip>
                                                    </Label>

                                                    <Label Content="{Binding MaxTaskNum, Mode=TwoWay}"
                                                           Width="32"
                                                           VerticalAlignment="Center"
                                                           />
                                                    
                                                    <Slider
                                                        Margin="16"
                                                        VerticalAlignment="Center"
                                                        Width="200"
                                                        Minimum="1"
                                                        Maximum="100"
                                                        TickFrequency="1"
                                                        IsSnapToTickEnabled="True"
                                                        Value="{Binding MaxTaskNum, Mode=TwoWay}"
                                                        >
                                                        <Slider.Style>
                                                            <Style TargetType="Slider" BasedOn="{StaticResource MaterialDesignSlider}">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
                                                            </Style>
                                                        </Slider.Style>
                                                    </Slider>

                                                </DockPanel>
                                            </DockPanel>
                                        </materialDesign:TransitionerSlide>

                                        <materialDesign:TransitionerSlide>
                                            <materialDesign:TransitionerSlide.BackwardWipe>
                                                <materialDesign:FadeWipe />
                                            </materialDesign:TransitionerSlide.BackwardWipe>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <ProgressBar Grid.Column="0" IsIndeterminate="True"/>
                                                <Button 
                                                Grid.Column="1"
                                                Margin="16,0,8,0"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                                Click="OnClickStop"
                                                Content="{materialDesign:PackIcon Kind=Stop}"                                           
                                            />
                                            </Grid>
                                        </materialDesign:TransitionerSlide>
                                    </materialDesign:Transitioner>
                                </DockPanel>
                            </materialDesign:ColorZone>

                            <!-- Paramters -->
                            <ListBox ItemsSource="{Binding Parameters}" MaxHeight="200" Margin="0,16,0,0" DockPanel.Dock="Top"
                                     KeyboardNavigation.TabNavigation="Continue"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" Orientation="Vertical"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <Label Content="{Binding Name}" MinWidth="100"/>
                                            <TextBox Text="{Binding Value}" IsEnabled="{Binding IsIndependentIP}" MinWidth="100" IsTabStop="True"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>

                            <!-- Output -->
                            <TextBox Text="{Binding ResultText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                                 TextWrapping="Wrap" 
                                 VerticalAlignment="Stretch"
                                 IsReadOnly="True"
                                 AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Auto"
                                 Margin="8,32,8,8"
                                 MinHeight="50"
                                 />


                        </DockPanel>
                    </materialDesign:TransitionerSlide>
                </materialDesign:Transitioner>
            </Grid>
        </DockPanel>
    </materialDesign:DialogHost>
</Window>

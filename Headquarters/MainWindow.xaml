<Window x:Class="Headquarters.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:local="clr-namespace:Headquarters"
        Style="{StaticResource MaterialDesignWindow}"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
        Title="Headquarters">
    
    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type local:MainTabViewModel}">
                <local:MainTabHeader />
            </DataTemplate>
            
            <Style x:Key="LockMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" 
                   d:DataContext="{d:DesignInstance local:MainTabViewModel}">
                <Setter Property="Header" Value="Lock" />
                <Setter Property="Icon" Value="{materialDesign:PackIcon Kind=Lock}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsLocked}" Value="True">
                        <Setter Property="Header" Value="Unlock"/>
                        <Setter Property="Icon" Value="{materialDesign:PackIcon Kind=LockOpenVariant}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <ContextMenu x:Key="TabItemContextMenu"
                         DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                         d:DataContext="{d:DesignInstance local:MainTabViewModel}">
                <MenuItem Header="New tab to the right" Command="{Binding NewTabCommand}" />
                <MenuItem Header="Duplicate" Command="{Binding DuplicateTabCommand}" />
                <Separator />
                <MenuItem Header="Rename" Command="{Binding RenameTabCommand}" />
                <Separator />
                <MenuItem Command="{Binding ToggleLockCommand}" Style="{StaticResource LockMenuItemStyle}" />
                <Separator />
                <MenuItem Header="Close" Command="{Binding CloseTabCommand}"/>
            </ContextMenu>

            <Style x:Key="TabItemStyle"  TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource CustomMaterialDesignDragableTabItemStyle}">
                <Setter Property="ContextMenu" Value="{StaticResource TabItemContextMenu}" />
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    
    <!-- <Window.Resources> -->
    <!--     <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}"> -->
    <!--         <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueLightBrush}" /> -->
    <!--     </Style> -->
    <!-- -->
    <!--      -->
    <!--     <PasswordBox -->
    <!--         x:Key="TopPasswordBox" -->
    <!--         PasswordChanged="OnTopPasswordChanged" -->
    <!--         materialDesign:HintAssist.Hint="Password" -->
    <!--         Width="200" -->
    <!--         > -->
    <!--         ~1~ For strange font color,size when delete "UserPassword" column at IPList @1@ -->
    <!--         <PasswordBox.Style> -->
    <!--             <Style TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}" > -->
    <!--                 <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" /> -->
    <!--                 <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" /> -->
    <!--             </Style> -->
    <!--         </PasswordBox.Style> -->
    <!--     </PasswordBox> -->
    <!-- -->
    <!-- -->
    <!--     <DataTemplate x:Key="PasswordBoxTemplate"> -->
    <!--         <TextBlock> -->
    <!--             <materialDesign:PackIcon -->
    <!--                 Kind="Key" Foreground="{Binding Content.BorderBrush, ElementName=TopPasswordBox}"/> -->
    <!--             <ContentControl Content="{StaticResource TopPasswordBox}" Name="TopPasswordBox" IsTabStop="False"/> -->
    <!--         </TextBlock> -->
    <!--     </DataTemplate> -->
    <!-- -->
    <!--     <DataTemplate x:Key="PasswordTextBoxTemplate"> -->
    <!--         <TextBlock> -->
    <!--             <materialDesign:PackIcon Grid.Column="0" -->
    <!--                 Kind="Key" Foreground="{Binding BorderBrush, ElementName=TopPasswordBox}"/> -->
    <!--             <TextBox Grid.Column="1" -->
    <!--                 Name="TopPasswordBox" -->
    <!--                 Text="{Binding Value}" -->
    <!--                 IsEnabled="{Binding IsIndependentIp}" -->
    <!--                 materialDesign:HintAssist.Hint="Password" -->
    <!--                 Style="{StaticResource MaterialDesignFloatingHintTextBox}" -->
    <!--                      Width="200"/> -->
    <!--         </TextBlock> -->
    <!--     </DataTemplate> -->
    <!-- -->
    <!--      -->
    <!--     <local:BoolDataTemplateSelector x:Key="passwordBoxTemplateSelector" -->
    <!--                                     BoolPropertyName="IsIndependentIP" -->
    <!--                                     TrueTemplate="{StaticResource PasswordBoxTemplate}" -->
    <!--                                     FalseTemplate="{StaticResource PasswordTextBoxTemplate}"/> -->
    <!-- </Window.Resources> -->

    <materialDesign:DialogHost Identifier="RootDialog">

        <materialDesign:DrawerHost
            IsTopDrawerOpen="{Binding IsSettingPageOpen, Mode=TwoWay}"
            TopDrawerCornerRadius="0 20 20 0"
            OpenMode="Modal">

            <materialDesign:DrawerHost.TopDrawerContent>
                <local:SettingPage DataContext="{Binding SettingPageViewModel}"/>
            </materialDesign:DrawerHost.TopDrawerContent>

            <!--<StackPanel>
                
                <ScrollViewer HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                <TabControl>
                <TabItem Header="Tab 0" />
                <TabItem Header="Tab 1" />
                <TabItem Header="Tab 2" />
                <TabItem Header="Tab 3" />
                <TabItem Header="Tab 4" />
                <TabItem Header="Tab 5" />
                <TabItem Header="Tab 6" />
                <TabItem Header="Tab 7" />
                <TabItem Header="Tab 8" />
                <TabItem Header="Tab 9" />
                <TabItem Header="Tab 10" />
                <TabItem Header="Tab 11" />
                <TabItem Header="Tab 12" />
                <TabItem Header="Tab 13" />
                <TabItem Header="Tab 14" />
                <TabItem Header="Tab 15" />
                <TabItem Header="Tab 16" />
                <TabItem Header="Tab 17" />
                <TabItem Header="Tab 18" />
                <TabItem Header="Tab 19" />
            </TabControl>
                </ScrollViewer>-->
            
                
            <Grid>
                <dragablz:TabablzControl x:Name="MainTabControl"
                    ItemsSource="{Binding TabItems, Mode=OneWay}"
                    NewItemFactory="{x:Static local:MainTabViewModel.Factory}"
                    ItemContainerStyle="{StaticResource  TabItemStyle}"
                    SelectedIndex="0">
   
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <local:MainTab />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                    
                    <dragablz:TabablzControl.HeaderSuffixContent>
                        <Grid MinWidth="64">
                            <!-- Add new tab button -->
                            <!-- RippleAssist.IsDisabledをいれておくとタブを追加したときに表示が荒ぶるのが軽減する気がするので一旦いれとく -->
                            <Button HorizontalAlignment="Left"
                                    Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                                    Style="{StaticResource MaterialDesignIconForegroundButton}"
                                    materialDesign:RippleAssist.IsDisabled="True"
                                    Width="24"
                                    Height="24">
                                <materialDesign:PackIcon
                                    Kind="Plus"
                                    Width="18"
                                    Height="18" />
                            </Button>
                            
                            <!-- Setting button -->
                            <Button HorizontalAlignment="Right"
                                    Command="{Binding OpenSettingPageCommand}"
                                    Style="{StaticResource MaterialDesignIconForegroundButton}"
                                    Width="32"
                                    Height="32"
                            >
                                <materialDesign:PackIcon Kind="Settings" />
                            </Button>
                        </Grid>
                    </dragablz:TabablzControl.HeaderSuffixContent>
                    
                </dragablz:TabablzControl>

            </Grid>
                
            <!-- </StackPanel> -->
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>

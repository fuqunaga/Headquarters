<UserControl x:Class="Headquarters.ScriptRunPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             xmlns:local="clr-namespace:Headquarters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:ScriptRunViewModel}"
             d:DesignWidth="800"
             d:DesignHeight="500">

    <UserControl.Resources>
        <Style x:Key="HorizontalDividerBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
            <Setter Property="Height" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>
    </UserControl.Resources>


    <DockPanel>
        <materialDesign:ColorZone Mode="PrimaryDark" Padding="8,0,0,0" DockPanel.Dock="Top"
                                  materialDesign:ElevationAssist.Elevation="Dp2">
            <DockPanel>
                <!-- Return Button -->
                <Button
                    Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}"
                    Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                    Style="{StaticResource MaterialDesignToolButton}"
                    HorizontalAlignment="Left" />

                <materialDesign:PackIcon Kind="ScriptText" VerticalAlignment="Center" Margin="8,0,0,0" />
                <Label Content="{Binding ScriptName}" VerticalAlignment="Center" />

                <!-- Run Button -->
                <materialDesign:Transitioner SelectedIndex="{Binding RunButtonIndex, Mode=OneWay}" Margin="16,0,8,0">

                    <materialDesign:TransitionerSlide>
                        <materialDesign:TransitionerSlide.ForwardWipe>
                            <local:CustomFadeWipe />
                        </materialDesign:TransitionerSlide.ForwardWipe>

                        <Button
                            Style="{StaticResource MaterialDesignFloatingActionSecondaryButton}"
                            HorizontalAlignment="Left"
                            IsEnabled="False"
                            Content="Select IP" />

                    </materialDesign:TransitionerSlide>

                    <materialDesign:TransitionerSlide>
                        <materialDesign:TransitionerSlide.BackwardWipe>
                            <local:CustomFadeWipe />
                        </materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:TransitionerSlide.ForwardWipe>
                            <local:CustomFadeWipe />
                        </materialDesign:TransitionerSlide.ForwardWipe>

                        <DockPanel>

                            <Button
                                Margin="8"
                                Style="{StaticResource MaterialDesignFloatingActionSecondaryButton}"
                                Command="{Binding RunCommand}"
                                >

                                <materialDesign:PackIcon Kind="MenuRight" Height="32" Width="32" />

                            </Button>


                            <DockPanel HorizontalAlignment="Right">
                                <Label VerticalAlignment="Center" Margin="4" Content="MaxTaskCount"
                                       ToolTipService.ShowDuration="10000">
                                    <Label.ToolTip>
                                        <TextBlock>
                                            Limit the number of concurrent tasks.<LineBreak />
                                            If you are getting OutOfMemory exceptions, try a smaller number than IP List.
                                        </TextBlock>
                                    </Label.ToolTip>
                                </Label>

                                <Label Content="{Binding MaxTaskCount, Mode=TwoWay}"
                                       Width="32"
                                       VerticalAlignment="Center" />

                                <Slider
                                    Margin="16"
                                    VerticalAlignment="Center"
                                    Width="200"
                                    Minimum="1"
                                    Maximum="100"
                                    TickFrequency="1"
                                    IsSnapToTickEnabled="True"
                                    Value="{Binding MaxTaskCount, Mode=TwoWay}">
                                    <!-- <Slider.Style> -->
                                    <!--     <Style TargetType="Slider" BasedOn="{StaticResource MaterialDesignSlider}"> -->
                                    <!--         <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" /> -->
                                    <!--     </Style> -->
                                    <!-- </Slider.Style> -->
                                </Slider>

                            </DockPanel>
                        </DockPanel>
                    </materialDesign:TransitionerSlide>

                    <materialDesign:TransitionerSlide>
                        <materialDesign:TransitionerSlide.BackwardWipe>
                            <local:CustomFadeWipe />
                        </materialDesign:TransitionerSlide.BackwardWipe>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ProgressBar Grid.Column="0" IsIndeterminate="True" />
                            <!--
                                    <Button
                                        Grid.Column="1"
                                        Margin="16,0,8,0"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                        Click="OnClickStop"
                                        Content="{materialDesign:PackIcon Kind=Stop}" />
                                    -->

                            <Button
                                Grid.Column="1"
                                Margin="16,0,8,0"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                Content="{materialDesign:PackIcon Kind=Stop}" />

                        </Grid>
                    </materialDesign:TransitionerSlide>
                </materialDesign:Transitioner>
            </DockPanel>
        </materialDesign:ColorZone>


        <!-- Description -->
        <Expander DockPanel.Dock="Top"
                  HorizontalAlignment="Stretch"
                  Visibility="{Binding Description, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}">
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="TextBox" Margin="4 0 4 0" />
                    <TextBlock Text="Description" />
                </StackPanel>
            </Expander.Header>

            <TextBlock Text="{Binding Description}"
                       Margin="32 0 16 0"
                       TextWrapping="Wrap"
                       Opacity="0.7" />
        </Expander>
        <Border DockPanel.Dock="Top" Style="{StaticResource HorizontalDividerBorder}" />

        <!-- Parameters -->
        <ItemsControl DockPanel.Dock="Top" Grid.IsSharedSizeScope="True"
                      ItemsSource="{Binding Parameters}"
                       MaxHeight="200"
                       Margin="0,16,0,0"
                      KeyboardNavigation.TabNavigation="Continue"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto">


            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="32 8 32 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="FirstRow"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0"
                                    Margin="16 0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                >
                            <TextBlock
                                HorizontalAlignment="Left"
                                
                                 >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="{Binding HelpFirstLine}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=HelpFirstLine}" Value="">
                                                <Setter Property="Text" Value="{Binding Name}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding HelpDetail}"
                                       Visibility="{Binding HelpDetail, Converter={StaticResource StringIsEmptyVisibilityConverter}}"
                                       Opacity="0.7"
                                       TextWrapping="Wrap"
                                       FontSize="12"
                                       MaxWidth="400" />

                        </StackPanel>

                        <Border Grid.Column="1">
                            <TextBox VerticalAlignment="Center"
                                     IsEnabled="{Binding IsIndependentIp}"
                                     IsTabStop="True">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFilledTextBox}">
                                        <Setter Property="Text" Value="{Binding Value}" />
                                        <Setter Property="materialDesign:HintAssist.Hint" Value="{Binding Name}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Text" Value="On IP List" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding Path=HelpFirstLine}" Value="">
                                                <Setter Property="materialDesign:HintAssist.Hint" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>

        <!-- Output Field -->
        <Border DockPanel.Dock="Bottom"
                DataContext="{Binding OutputFieldViewModel}"
                x:Name="OutputBorder"
                BorderBrush="{DynamicResource MaterialDesign.Brush.TextBox.OutlineBorder}"
                BorderThickness="{x:Static materialDesign:Constants.DefaultOutlinedBorderInactiveThickness}"
                CornerRadius="4"
                Margin="4 32 4 4">
            
            <!-- GridのBackgroundがないとClippoingBorderが効かないので適当に設定しておく -->
            <Grid>
                <Grid.Clip>
                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                        <Binding ElementName="OutputBorder" Path="ActualWidth" />
                        <Binding ElementName="OutputBorder" Path="ActualHeight" />
                        <Binding ElementName="OutputBorder" Path="CornerRadius" />
                        <Binding ElementName="OutputBorder" Path="BorderThickness" />
                    </MultiBinding>
                </Grid.Clip>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0"
                      Background="{DynamicResource MaterialDesign.Brush.ToolBar.Background}"
                      >
                    <ListBox
                             SelectionMode="Multiple"
                             materialDesign:ListBoxAssist.CanUserToggleSelectedItem="True"
                             Style="{StaticResource MaterialDesignToolToggleFlatListBox}"
                             HorizontalAlignment="Right"
                             Height="24"
                             >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                <Setter Property="Padding" Value="4 0" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        

                        <ListBoxItem  IsSelected="{Binding IsCompletedVisible, Mode=TwoWay}">
                            <StackPanel Orientation="Horizontal">
                                <emoji:TextBlock Text="✅" FontSize="12"/>
                                <TextBlock Text="{Binding CompletedCount}" Width="24" />
                            </StackPanel>
                        </ListBoxItem>

                        <ListBoxItem IsSelected="{Binding IsFailedVisible, Mode=TwoWay}">
                            <StackPanel Orientation="Horizontal" >
                                <emoji:TextBlock Text="❌" FontSize="12"/>
                                <TextBlock Text="{Binding FailedCount}" Width="24" />
                            </StackPanel>
                        </ListBoxItem>
                    </ListBox>
                </Grid>

                <emoji:TextBox  Grid.Row="1"
                                Text="{Binding OutputText, Mode=OneWay}"
                                Style="{StaticResource MaterialDesignTextBox}"
                                IsReadOnly="True"
                                VerticalScrollBarVisibility="Auto"
                                Margin="8,0"
                                >
                    <emoji:TextBox.Resources>
                        <Style TargetType="emoji:RichTextBox" BasedOn="{StaticResource MaterialDesignOutlinedRichTextBox}" >
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="materialDesign:TextFieldAssist.OutlinedBorderActiveThickness" Value="0" />
                        </Style>
                    </emoji:TextBox.Resources>
                </emoji:TextBox>
                
            </Grid>
        </Border>
    </DockPanel>
</UserControl>
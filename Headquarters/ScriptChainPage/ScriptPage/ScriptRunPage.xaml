<UserControl x:Class="Headquarters.ScriptRunPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             xmlns:local="clr-namespace:Headquarters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:ScriptRunViewModel}"
             d:DesignWidth="800"
             d:DesignHeight="500">

    <UserControl.Resources>
        <Style x:Key="HorizontalDividerBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
            <Setter Property="Height" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>
        
        <!-- MaterialDesignToolのListBoxItemのスタイルを参考にシンプル化したもの
             Rippleや選択時のアニメーションなどを削除
             WPFデフォルトのマウスオーバー色が反映されてしまうのを修正 -->
        <Style x:Key="OutputResultListBoxItemStyle" TargetType="ListBoxItem">
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="IsSelected" Value="true" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="materialDesign:ListBoxItemAssist.HoverBackground"
                    Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=0.1}" />
            <Setter Property="materialDesign:ListBoxItemAssist.SelectedFocusedBackground"
                    Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=0.18}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- マウスオーバー時のトリガーを設定 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background"
                                        Value="{Binding Path=(materialDesign:ListBoxItemAssist.HoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <!-- 選択時のトリガーを設定 -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background"
                                        Value="{Binding Path=(materialDesign:ListBoxItemAssist.SelectedFocusedBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        

        
        <ScrollViewer  Grid.Row="0" 
                       VerticalScrollBarVisibility="Auto"
                       HorizontalScrollBarVisibility="Auto">
            <StackPanel>
                <!-- Description -->
                <Expander HorizontalAlignment="Stretch"
                      Visibility="{Binding Description, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="TextBox" Margin="4 0 4 0" />
                            <TextBlock Text="Description" />
                        </StackPanel>
                    </Expander.Header>

                    <TextBlock Text="{Binding Description}"
                           Margin="32 0 16 16"
                           TextWrapping="Wrap"
                           Opacity="0.7" />
                </Expander>
                <Border Style="{StaticResource HorizontalDividerBorder}" />


                <!-- Parameters -->
                <ItemsControl DockPanel.Dock="Top" Grid.IsSharedSizeScope="True"
                          ItemsSource="{Binding Parameters}"
                          IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBooleanConverter}}"
                          Margin="0,16"
                          KeyboardNavigation.TabNavigation="Continue">

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:ScriptParameterInputField />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>
            </StackPanel>
        </ScrollViewer>

        <GridSplitter Grid.Row="1" 
                      HorizontalAlignment="Stretch"
                      Height="5" Cursor="SizeNS" 
                      />
        
        <!-- Output Field -->
        <Border Grid.Row="2"
                DataContext="{Binding OutputFieldViewModel}"
                BorderBrush="{DynamicResource MaterialDesign.Brush.TextBox.OutlineBorder}"
                BorderThickness="{x:Static materialDesign:Constants.DefaultOutlinedBorderInactiveThickness}"
                CornerRadius="4"
                Margin="4 4 4 4">

            <!-- 中のコンテンツが丸角でもクリッピングされるトリック
                 https://stackoverflow.com/a/28344788/2015881 -->
            <!-- Inner Border for Content clipping -->
            <Border CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}" >
                <!--OpacityMask for clipping the content inside the inner border-->
                <Border.OpacityMask>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Border Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                                       Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"
                                       CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                       Background="Black"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.OpacityMask>

                
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    
                    <!-- Top Bar -->
                    <Grid Grid.Row="0"
                          Background="{DynamicResource MaterialDesign.Brush.ToolBar.Background}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <!-- Search field -->
                            <TextBox Grid.Column="0"
                                     Text="{Binding SearchText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                     HorizontalAlignment="Left"
                                     materialDesign:TextFieldAssist.HasClearButton="True"
                                     materialDesign:TextFieldAssist.HasLeadingIcon="True"
                                     materialDesign:TextFieldAssist.LeadingIcon="Search"
                                     materialDesign:TextFieldAssist.TextFieldCornerRadius="0"
                                     materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     BorderThickness="0"
                                     MinWidth="200"
                                     Height="20"
                                     Padding="4 0"
                                     Margin="2" />

                            <!-- Filter Buttons -->
                            <ListBox Grid.Column="1"
                                     ItemsSource="{Binding FilterButtonViewModels}"
                                     SelectionMode="Multiple"
                                     materialDesign:ListBoxAssist.CanUserToggleSelectedItem="True"
                                     Style="{StaticResource MaterialDesignToolToggleFlatListBox}"
                                     HorizontalAlignment="Right"
                                     Height="24"
                                     Padding="2 0">

                                <ListBox.Resources>
                                    <Style x:Key="FilterTextBlock" TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="MinWidth" Value="24" />
                                        <Setter Property="Padding" Value="2 1 0 0" />
                                    </Style>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="Margin" Value="0 1" />
                                        <Setter Property="Padding" Value="4 0" />
                                        <Setter Property="IsSelected" Value="{Binding IsOutputVisible, Mode=TwoWay}" />
                                        <Setter Property="ToolTip" Value="{Binding IconDescription}" />
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <emoji:TextBlock Text="{Binding IconEmoji}"
                                                             FontSize="12" />
                                            <TextBlock Text="{Binding Count}"
                                                       d:Text="123"
                                                       Style="{StaticResource FilterTextBlock}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Grid>

                    <!-- OutputUnits -->
                    <ListBox Grid.Row="1"
                             ItemsSource="{Binding OutputUnitsViewSource.View}"
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             VirtualizingStackPanel.ScrollUnit="Pixel"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemContainerStyle="{StaticResource OutputResultListBoxItemStyle}">

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:OutputUnitViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <emoji:TextBlock Grid.Column="0"
                                                     Text="{Binding IconEmoji}"
                                                     FontSize="12" />

                                    <TextBox Grid.Column="1"
                                             Text="{Binding Text, Mode=OneWay}"
                                             Style="{StaticResource MaterialDesignTextBoxBase}"
                                             IsReadOnly="True"
                                             HorizontalScrollBarVisibility="Disabled"
                                             VerticalScrollBarVisibility="Disabled"
                                             TextWrapping="Wrap"
                                             BorderThickness="0"
                                             materialDesign:TextFieldAssist.DecorationVisibility="Collapsed" />
                                </Grid>
                            </DataTemplate>

                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>
        </Border>
    </Grid>
</UserControl>